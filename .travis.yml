language: cpp
os: linux
dist: xenial
sudo: false

matrix:
  include:
    # linux clang
    - env:
        - COMPILER_CC=clang-5.0
        - COMPILER_CXX=clang++-5.0
      addons:
        apt:
          packages:
            - clang-5.0
            - libgtest-dev
    - env:
        - COMPILER_CC=clang-6.0
        - COMPILER_CXX=clang++-6.0
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
            - libgtest-dev
    - env:
        - COMPILER_CC=clang-7
        - COMPILER_CXX=clang++-7
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-7
          packages:
            - clang-7
            - libgtest-dev
    - env:
        - COMPILER_CC=clang-8
        - COMPILER_CXX=clang++-8
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
            - libgtest-dev
    # linux gcc
    - env:
        - COMPILER_CC=gcc-7
        - COMPILER_CXX=g++-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - libgtest-dev
    - env:
        - COMPILER_CC=gcc-8
        - COMPILER_CXX=g++-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - libgtest-dev
    # test coverage
    - env:
        - COMPILER_CC=gcc-7
        - COMPILER_CXX=g++-7
        - CODECOV_TOKEN="9e95703c-c009-41f1-8128-899cf8ef98b0"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - libgtest-dev

before_script:
  # setup compiler before running script
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export CC=${COMPILER_CC};
      export CXX=${COMPILER_CXX};
    fi
  # build gtest from source
  - pushd .
  - cd /tmp && mkdir -p gtest && cd gtest
  - cmake -DCMAKE_BUILD_TYPE=RELEASE /usr/src/gtest/ && make -j
  - sudo mv libgtest* /usr/lib/
  - popd
  # setup build environment
  - source envsetup.sh

script:
  - cbuild
  - if [ -z "$CODECOV_TOKEN" ]; then
      cmake -DCMAKE_BUILD_TYPE=DEBUG ${BUILD_TOP};
    else
      cmake -DCMAKE_BUILD_TYPE=RELEASE ${BUILD_TOP};
    fi
  - make -j
  # running ctest with all gtest cases
  - make test

after_success:
  # upload test coverage to codecov
  - if [ -z "$CODECOV_TOKEN" ]; then bash <(curl -s https://codecov.io/bash); fi
